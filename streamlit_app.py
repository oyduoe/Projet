import streamlit as st
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from scipy.optimize import minimize
import plotly.express as px

RISK_AVERSION = 0.9
RETURN_TARGET_WEIGHT = 0.2
TAUX_SANS_RISQUE = 0.04
SEUIL_PONDERATION = 1e-4

def optimiser_portefeuille(df, mode='max_rendement'):
    nb_actifs = df.shape[1]
    matrice_cov = df.cov() * 252
    rendements_annualises = df.mean() * 252
    
    contraintes = [{'type': 'eq', 'fun': lambda w: np.sum(w) - 1}]
    bornes = [(0, 1) for _ in range(nb_actifs)]
    poids_initiaux = np.ones(nb_actifs)/nb_actifs
    
    if mode == 'max_rendement':
        def objectif(w):
            return -(w @ rendements_annualises - RISK_AVERSION * np.sqrt(w.T @ matrice_cov @ w))
        
    elif mode == 'min_volatilite':
        def objectif(w):
            return (np.sqrt(w.T @ matrice_cov @ w) - RETURN_TARGET_WEIGHT * (w @ rendements_annualises))
    
    resultat = minimize(objectif, poids_initiaux, method='SLSQP', bounds=bornes, constraints=contraintes)
    
    return resultat.x

def analyser_portefeuille(rendements, poids):
    rendements_port = rendements.dot(poids)
    volatilite = rendements_port.std() * np.sqrt(252)
    rendement_annuel = rendements_port.mean() * 252
    sharpe = (rendement_annuel - TAUX_SANS_RISQUE)/volatilite if volatilite != 0 else 0
    
    df_metriques = pd.DataFrame({
        'Rendement Annuel (%)': [rendement_annuel * 100],
        'Volatilit√© Annuelle (%)': [volatilite * 100],
        'Ratio de Sharpe': [sharpe]
    }).round(2)
    
    df_actifs = pd.DataFrame({
        'Actif': rendements.columns[np.where(poids > SEUIL_PONDERATION)[0]],
        'Pond√©ration (%)': [f"{p * 100:.2f}%" for p in poids[poids > SEUIL_PONDERATION]]
    })
    
    return df_metriques, df_actifs

def plot_perf(rendements, poids, titre):
    fig, ax = plt.subplots()
    (1 + rendements.dot(poids)).cumprod().plot(title=titre, ax=ax)
    plt.grid(True)
    return fig

def section_esg():
    st.header("üåç Analyse ESG D√©taill√©e")
    esg_data = pd.read_excel("Finance verte.xlsx")
    rating_order = ['CCC', 'B', 'BB', 'BBB', 'A', 'AA', 'AAA']
    rating_colors = {
        'CCC': '#FF6B6B',
        'B': '#FF9F9F',
        'BB': '#FFD3D3',
        'BBB': '#E8F5E9',
        'A': '#C8E6C9',
        'AA': '#A5D6A7',
        'AAA': '#66BB6A'
    }
    esg_data['Rating'] = pd.Categorical(esg_data['Ratings_today'], categories=rating_order, ordered=True)

    col1, col2, col3 = st.columns([2, 2, 3])
    with col1:
        selected_countries = st.multiselect(
            "Choisir des pays",
            options=esg_data['Country'].unique(),
            default=[],
            key='esg_country'
        )
    with col2:
        selected_sectors = st.multiselect(
            "Choisir des secteurs",
            options=esg_data['Industry'].unique(),
            default=[],
            key='esg_sector'
        )
    with col3:
        selected_company = st.selectbox(
            "Rechercher un actif",
            options=[''] + sorted(esg_data['Companies'].unique()),
            format_func=lambda x: "Tous les actifs" if x == '' else x,
            key='esg_search'
        )
    
    filtered_data = esg_data.copy()
    if selected_countries:
        filtered_data = filtered_data[filtered_data['Country'].isin(selected_countries)]
    if selected_sectors:
        filtered_data = filtered_data[filtered_data['Industry'].isin(selected_sectors)]
    if selected_company:
        filtered_data = filtered_data[filtered_data['Companies'] == selected_company]
    if not filtered_data.empty:
        if selected_company:
            company_data = filtered_data.iloc[0]
            st.subheader(f"Fiche Entreprise : {company_data['Companies']}")
            col_info, col_logo = st.columns([3, 1])
            with col_info:
                st.markdown(f"""
                **Pays** : {company_data['Country']} \n
                **Secteur** : {company_data['Industry']} \n
                **Rating ESG** : {company_data['Ratings_today']} ({company_data['Ratings_before']} ‚Üí {company_data['Ratings_today']}) \n
                **Description** : {company_data['Description']} \n
                **Plan ESG** : {company_data['Plan ESG']}
                """)
            st.divider()
        
        with st.expander("Carte g√©ographique des actifs"):
            country_counts = filtered_data['Country'].value_counts().reset_index()
            fig = px.choropleth(
                country_counts,
                locations='Country',
                locationmode='country names',
                color='count',
                hover_name='Country',
                color_continuous_scale='Greens'
            )
            st.plotly_chart(fig, use_container_width=True)
        
        st.subheader(f"{len(filtered_data)} actifs trouv√©s")
        col_table, col_metrics = st.columns([3, 1])
        with col_table:
            def color_ratings(val):
                return f'background-color: {rating_colors.get(val, "white")}'
            st.dataframe(
                filtered_data[['Companies', 'Country', 'Industry', 'Rating']]
                .sort_values('Rating', ascending=False)
                .reset_index(drop=True)
                .style.map(color_ratings, subset=['Rating']),
                height=500
            )
        with col_metrics:
            st.metric("Meilleur rating", filtered_data['Rating'].max())
            st.metric("Pays le plus repr√©sent√©", filtered_data['Country'].mode()[0])
            st.metric("Secteur dominant", filtered_data['Industry'].mode()[0])
    else:
        st.warning("Aucun actif ne correspond aux crit√®res s√©lectionn√©s")

def section_education():
    st.header("üéì √âducation et Formation en Finance Durable")

    with st.expander("üìö Fondamentaux ESG"):
        st.markdown("""
        ### Les 3 Piliers ESG

        **Environnemental (E)**  
        - √âmissions de GES (gaz √† effet de serre), incluant les √©missions directes et indirectes  
        - Efficacit√© √©nerg√©tique dans les op√©rations  
        - Pr√©servation de la biodiversit√© et √©conomie circulaire  

        **Social (S)**  
        - Conditions de travail s√ªres et √©quitables  
        - Diversit√© et inclusion dans les effectifs  
        - Relations positives avec les communaut√©s locales  

        **Gouvernance (G)**  
        - Ind√©pendance et diversit√© des conseils d‚Äôadministration  
        - Lutte contre la corruption et pratiques √©thiques  
        - Droits et transparence envers les actionnaires

        ### R√©glementations Cl√©s
        - **SFDR** : r√®glement europ√©en sur la transparence ESG (Articles 6, 8, 9)  
        - **Taxonomie Europ√©enne** : classification des activit√©s durables  
        - **Loi Pacte** : obligations ESG dans l‚Äô√©pargne et l‚Äôassurance-vie
        """)

    with st.expander("üè∑Ô∏è Labels et Certifications"):
        st.markdown("""
        | Label       | Ann√©e | Actifs       | Particularit√©                       |
        |-------------|-------|--------------|-------------------------------------|
        | **ISR**     | 2016  | 800 Md‚Ç¨      | Analyse ESG de 90% des titres       |
        | **Greenfin**| 2015  | 36 Md‚Ç¨       | Exclusion des √©nergies fossiles     |
        | **Finansol**| 1997  | 25 Md‚Ç¨       | Sp√©cialis√© dans la finance solidaire

        **Diff√©rences principales :**  
        - **Finansol** : impact social direct  
        - **Greenfin** : focalis√© sur l‚Äôenvironnement  
        - **ISR** : approche globale ESG
        """)

    with st.expander("üíº Produits Financiers Durables"):
        st.markdown("""
        **Green Bonds (Obligations Vertes)**  
        - Financement de projets environnementaux (√©nergies renouvelables, transports durables)  
        - Certification possible par le Climate Bonds Initiative  
        - Exemple : OAT Verte √©mise par la France

        **Fonds Th√©matiques ESG**  
        - Strat√©gies d‚Äôexclusion (ex : tabac, charbon)  
        - Best-in-Class : s√©lection des entreprises les mieux not√©es ESG  
        - Alignement avec les Objectifs de D√©veloppement Durable (ODD)

        **Private Equity ESG**  
        - Int√©gration de crit√®res ESG d√®s la due diligence  
        - Suivi de l‚Äôimpact environnemental et social des entreprises en portefeuille  
        - Exemples : fonds √† impact, investissement dans l‚Äôagritech ou l‚Äôinclusion financi√®re
        """)

    with st.expander("üìä Mesure de l'Impact"):
        st.markdown("""
        **Indicateurs Cl√©s**  
        - Intensit√© carbone (exprim√©e en tCO2e/M‚Ç¨ investi)  
        - Pourcentage d‚Äôactivit√©s durables selon la taxonomie  
        - Score de biodiversit√© (MSA : Mean Species Abundance)

        **Temp√©rature implicite**  
        - √âvalue l‚Äôalignement d‚Äôun portefeuille avec les objectifs climatiques (ex: +1.5¬∞C)  
        - Prend en compte les √©missions directes, indirectes et de la cha√Æne de valeur (Scope 3)
        """)

    with st.expander("üåç Enjeux Plan√©taires"):
        st.markdown("""
        **Limites Plan√©taires D√©pass√©es**  
        - Changement climatique (temp√©rature moyenne en hausse)  
        - √ârosion de la biodiversit√© (extinction massive)  
        - Artificialisation des sols  
        - Perturbation des cycles biog√©ochimiques

        **Accord de Paris**  
        - Limiter le r√©chauffement en dessous de +2¬∞C  
        - R√©duction globale des √©missions de GES de 43% d‚Äôici 2030
        """)

    with st.expander("‚ö†Ô∏è D√©fis et Controverses"):
        st.markdown("""
        **D√©fis Sectoriels**  
        - Tr√®s faible part des fonds r√©ellement align√©s avec l‚ÄôAccord de Paris  
        - Faible transparence et comparabilit√© des donn√©es ESG  
        - Financements persistants dans les √©nergies fossiles malgr√© les engagements

        **Greenwashing**  
        - Pratiques trompeuses d‚Äôinvestissement ¬´ vert ¬ª  
        - Divergences dans les notations ESG entre agences
        """)

    with st.expander("üèÜ M√©thodologie Goodvest (exemple d‚Äôapproche stricte)"):
        st.markdown("""
        **√âtapes cl√©s :**  
        1. Exclusion totale des secteurs controvers√©s  
        2. Analyse carbone sur l‚Äôensemble des √©missions  
        3. Mesure de l‚Äôimpact sur la biodiversit√©  
        4. Engagement actionnarial  
        5. Validation par un comit√© ind√©pendant  
        6. Transparence int√©grale des choix d‚Äôinvestissement

        **R√©sultats observ√©s :**  
        - Portefeuilles align√©s avec un sc√©nario <2¬∞C  
        - Meilleur impact biodiversit√© vs fonds classiques  
        - R√©duction significative des √©missions financ√©es
        """)

    with st.expander("üìà Performance vs Impact"):
        st.markdown("""
        **Comparatif ESG vs Indices Traditionnels (2014‚Äì2024)**  
        | Indice              | Performance 5 ans |
        |---------------------|------------------|
        | MSCI Europe         | +58%             |
        | MSCI Europe ESG     | +63%             |
        | MSCI PAB (Paris Al.)| +61%             |

        L‚Äôint√©gration ESG permet souvent de r√©duire la volatilit√© tout en conservant un rendement comp√©titif
        """)

    with st.expander("üß† Quiz ESG"):
        score = 0

        st.subheader("üî∞ Quiz de Base")
        q1 = st.radio("Que signifie ESG?",
                     ["Entreprise, Soci√©t√©, Gouvernement", 
                      "Environnement, Social, Gouvernance",
                      "√âconomie, Strat√©gie, Gestion"])
        if q1 == "Environnement, Social, Gouvernance": score += 1

        q2 = st.radio("Lequel est un crit√®re environnemental?",
                     ["Diversit√© du conseil", 
                      "√âmissions de GES",
                      "Politique de dividendes"])
        if q2 == "√âmissions de GES": score += 1

        if st.button("‚úÖ V√©rifier Quiz de Base"):
            st.success(f"Score: {score}/2 - {'‚úÖ Parfait!' if score == 2 else 'üìö √Ä revoir'}")

        st.subheader("üìò Quiz Interm√©diaire")
        score2 = 0

        q3 = st.radio("Quel article SFDR concerne les fonds √† impact ?",
                     ["Article 6", "Article 8", "Article 9"])
        if q3 == "Article 9": score2 += 1

        q4 = st.multiselect("Objectifs de la Taxonomie Europ√©enne :", 
                           ["Adaptation au climat", "√ânergie nucl√©aire", 
                            "√âconomie circulaire", "Blockchain"])
        if set(q4) == {"Adaptation au climat", "√âconomie circulaire"}: score2 += 1

        q5 = st.radio("Le premier green bond fut √©mis par :", 
                      ["World Bank (2007)", "France (2017)", "Norv√®ge (2006)"])
        if q5 == "World Bank (2007)": score2 += 1

        q6 = st.checkbox("Les SLB lient leur coupon √† des objectifs ESG")
        if q6: score2 += 1

        if st.button("üì§ Soumettre Quiz Interm√©diaire"):
            st.success(f"""Score: {score2}/4 - {
                'üåü Bien jou√©!' if score2 >= 3 else
                'üìò Bon d√©but, continuez' if score2 >= 2 else 
                'üîç √Ä retravailler'}""")

        st.subheader("üìó Quiz Expert")
        score3 = 0

        q7 = st.radio("Quel % des √©missions de GES vient des √©nergies fossiles ?",
                     ["45%", "75%", "90%"])
        if q7 == "90%": score3 += 1

        q8 = st.multiselect("Limites plan√©taires d√©j√† d√©pass√©es :", 
                           ["Cycle de l‚Äôeau", "A√©rosols", "Biodiversit√©", "Blockchain"])
        if set(q8) == {"A√©rosols", "Biodiversit√©"}: score3 += 1

        q9 = st.slider("Objectif de r√©duction des GES d‚Äôici 2030 par rapport √† 2015 :", 
                       10, 100, 43)
        if q9 == 43: score3 += 1

        if st.button("üîé V√©rifier Quiz Expert"):
            st.success(f"""Score: {score3}/3 - {
                'üèÜ Ma√Ætrise ESG!' if score3 == 3 else 
                'üìó Solide!' if score3 == 2 else 
                'üå± Besoin de r√©vision'}""")

def section_equipe():
    st.header("üë• Notre √âquipe")
    
    col1, col2, col3 = st.columns(3)
    with col1:
        st.image("https://cdn.pixabay.com/photo/2016/08/08/09/17/avatar-1577909_1280.png", use_column_width=True)
        st.markdown("**Justine Marquaille**")
    with col2:
        st.image("https://cdn.pixabay.com/photo/2016/08/08/09/17/avatar-1577909_1280.png", use_column_width=True)
        st.markdown("**Zhetian Hua**")
    with col3:
        st.image("Karine.jpg", use_column_width=True)
        st.markdown("**Karine Sun**")
    
    st.markdown("""
    ### üìÇ Collaboration
    - **M√©thodologie** : Le r√©chauffement climatique et les d√©fis li√©s aux crit√®res ESG (Environnement, Social et Gouvernance) sont des enjeux mondiaux. C‚Äôest pourquoi nous ne voulons pas simplement valoriser ‚Äì et donc investir ‚Äì dans les entreprises qui font d√©j√† ce que toutes les autres devraient faire. La finance est un levier qui permet de choisir quelles entreprises nous souhaitons soutenir et quelles entreprises nous voulons voir prosp√©rer √† l‚Äôavenir.<br>
    Nous avons choisi d‚Äôaider celles qui font de r√©els efforts. Nous mettons l‚Äôaccent sur l‚Äôeffort et l‚Äôam√©lioration, et non uniquement sur les r√©sultats. Il est toujours plus facile d‚Äôavoir des √©missions de gaz √† effet de serre quasi nulles quand on vend des gobelets r√©utilisables. Les choses sont bien plus complexes quand on √©volue, par exemple, dans le secteur p√©trolier.<br>
    C‚Äôest pourquoi nous nous concentrons sur les entreprises qui polluent beaucoup, mais qui investissent √©galement massivement dans les initiatives ESG. Par ailleurs, l‚ÄôESG concerne avant tout la transition, et pour mettre en place une transition globale, il faut que tout le monde participe.
    - **Choix des entreprises** : Nous nous basons sur la m√©thodologie ESG mondiale de MSCI et analysons l‚Äô√©volution de leur notation au cours des derni√®res ann√©es. Les notes vont de CCC √† AAA. Les entreprises faisant partie de notre portefeuille sont celles qui ont connu une am√©lioration d‚Äôau moins deux crans entre leur note pr√©c√©dente et leur note actuelle.
    - **Versionning** : [GitHub Repository](https://github.com/oyduoe/Finance-durable)
    - **Description des fichiers** :
        - streamlit_app.py : Code principal de l'application Streamlit
        - requirements.txt : Fichier texte qui liste les d√©pendances Python n√©cessaires au projet
        - Data.csv : Fichier contenant les rendements de notre portefeuille
        - Finance durable.xlsx : Detail des actifs de notre portefeuille
    """, unsafe_allow_html=True)

st.title("Finance Durable")

@st.cache_data
def charger_donnees():
    return pd.read_csv("Data.csv", parse_dates=['Date'], index_col='Date').ffill().dropna(how='all')

df = charger_donnees()

page = st.sidebar.selectbox("Navigation", 
                           ["Analyse ESG",
                            "Optimisation Portefeuille", 
                            "√âducation Financi√®re",
                            "Notre √âquipe"])

if page == "Optimisation Portefeuille":
    st.header("üìà Optimisation Portefeuille")
    st.write("Quel est votre objectif d'investissement ?")

    col1, col2, col3 = st.columns(3)
    with col1:
        btn_max_ret = st.button('Maximiser le rendement')
    with col2:
        btn_min_vol = st.button('Minimiser la volatilit√©')
    with col3:
        btn_esg = st.button('ESG (√† venir)')

    if btn_max_ret:
        poids = optimiser_portefeuille(df, 'max_rendement')
        metriques, actifs = analyser_portefeuille(df, poids)
        
        st.subheader("Portefeuille - Maximisation du rendement")
        st.dataframe(metriques)
        st.dataframe(actifs)
        st.pyplot(plot_perf(df, poids, 'Performance - Rendement Maximis√©'))

    if btn_min_vol:
        poids = optimiser_portefeuille(df, 'min_volatilite')
        metriques, actifs = analyser_portefeuille(df, poids)
        
        st.subheader("Portefeuille - Minimisation de la volatilit√©")
        st.dataframe(metriques)
        st.dataframe(actifs)
        st.pyplot(plot_perf(df, poids, 'Performance - Volatilit√© Minimis√©e'))

    if btn_esg:
        st.write("Fonctionnalit√© ESG en cours de d√©veloppement...")
    
elif page == "Analyse ESG":
    section_esg()
    
elif page == "√âducation Financi√®re":
    section_education()
    
elif page == "Notre √âquipe":
    section_equipe()